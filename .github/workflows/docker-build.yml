name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  SCHEDULER_IMAGE_NAME: ${{ github.repository_owner }}/quackview-scheduler
  DISPLAY_IMAGE_NAME: ${{ github.repository_owner }}/quackview-display
  QUACKJOB_SOLUTION: ./jobs/quackjob/QuackView.QuackJob.sln
  DOTNET_VERSION: '9.0.x'
  FRAMEWORK: net9.0

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore win-x64
        run: dotnet restore "${{ env.QUACKJOB_SOLUTION }}" -p:RuntimeIdentifiers="win-x64"

      - name: Restore linux-x64
        run: dotnet restore "${{ env.QUACKJOB_SOLUTION }}" -p:RuntimeIdentifiers="linux-x64"

      - name: Run unit tests
        run: dotnet test "${{ env.QUACKJOB_SOLUTION }}" -c Release --no-restore --logger "trx;LogFileName=test-results.trx"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quackjob-test-results
          path: "**/TestResults/*.trx"
          if-no-files-found: ignore
          retention-days: 7

      - name: Clean build artifacts
        run: dotnet clean --verbosity minimal

      - name: Kill lingering dotnet processes
        run: |
          pkill -f dotnet || true

      - name: Publish QuackJob linux-x64
        run: |
          dotnet publish "${{ env.QUACKJOB_SOLUTION }}" \
            -c Release \
            -r "linux-x64" \
            --no-incremental \
            -f "${{ env.FRAMEWORK }}" \
            /p:PublishSingleFile=false \
            /p:SelfContained=false \
            /p:PublishTrimmed=false \
            /p:UseAppHost=false

      - name: Copy files to dist so the rest of the script can find them
        run: |
          mkdir -p ./dist/quackjob/linux-x64
          cp -r ./jobs/quackjob/src/QuackView.QuackJob/bin/Release/${{ env.FRAMEWORK }}/linux-x64/publish/* ./dist/quackjob/linux-x64

      - name: Verify quackjob executable exists
        run: |
          ls -la ./dist/quackjob/linux-x64
          file ./dist/quackjob/linux-x64/quackjob

      - name: Removing pdb files from dist
        run: |
          find ./dist/quackjob/linux-x64 -name "*.pdb" -type f -delete

      # No point in building this without publishing it somewhere
      # - name: Publish QuackJob win-x64
      #   run: |
      #     dotnet publish "${{ env.QUACKJOB_SOLUTION }}" \
      #       -c Release \
      #       -r "win-x64" \
      #       -f "${{ env.FRAMEWORK }}"

      - name: Copy linux-x64 publish output to scheduler for the container build (keep context limited)
        run: |
          mkdir -p ./scheduler/dist/bin
          cp -r ./dist/quackjob/linux-x64/* ./scheduler/dist/bin/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push quackview-display image
        uses: docker/build-push-action@v5
        with:
          context: ./display
          file: ./display/container/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/quackview-display:latest

      - name: Build and push quackview-scheduler image
        uses: docker/build-push-action@v5
        with:
          context: ./scheduler
          file: ./scheduler/container/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/quackview-scheduler:latest

